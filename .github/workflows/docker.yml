name: Publish Docker image

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  DOCKER_IMAGE: misskey/misskey
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  push_to_registry:
    name: Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Setup QEMU to support arm64 image building
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Use buildx for multi-arch docker builds and for gh actions
      # caching.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_IMAGE }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: "linux/amd64,linux/arm64"
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      ## Push the built image to GHCR
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      - name: Docker meta
        id: meta_ghcr
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.GHCR_IMAGE }}

      # While this builds, it's a no-op because we just built it
      # before. We're just using build again to push from the buildkit
      # builder setup earlier.
      - name: Push to GHCR
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: "linux/amd64,linux/arm64"
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          labels: ${{ steps.meta_ghcr.outputs.labels }}
