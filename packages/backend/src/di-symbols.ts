function s(key: string): symbol {
	return Symbol.for(key);
}

export const DI = {
	config: s('config'),
	db: s('db'),
	redis: s('redis'),
	redisSubscriber: s('redisSubscriber'),

	//#region Repositories
	usersRepository: s('usersRepository'),
	notesRepository: s('notesRepository'),
	announcementsRepository: s('announcementsRepository'),
	announcementReadsRepository: s('announcementReadsRepository'),
	appsRepository: s('appsRepository'),
	noteFavoritesRepository: s('noteFavoritesRepository'),
	noteThreadMutingsRepository: s('noteThreadMutingsRepository'),
	noteReactionsRepository: s('noteReactionsRepository'),
	noteUnreadsRepository: s('noteUnreadsRepository'),
	pollsRepository: s('pollsRepository'),
	pollVotesRepository: s('pollVotesRepository'),
	userProfilesRepository: s('userProfilesRepository'),
	userKeypairsRepository: s('userKeypairsRepository'),
	userPendingsRepository: s('userPendingsRepository'),
	attestationChallengesRepository: s('attestationChallengesRepository'),
	userSecurityKeysRepository: s('userSecurityKeysRepository'),
	userPublickeysRepository: s('userPublickeysRepository'),
	userListsRepository: s('userListsRepository'),
	userListJoiningsRepository: s('userListJoiningsRepository'),
	userGroupsRepository: s('userGroupsRepository'),
	userGroupJoiningsRepository: s('userGroupJoiningsRepository'),
	userGroupInvitationsRepository: s('userGroupInvitationsRepository'),
	userNotePiningsRepository: s('userNotePiningsRepository'),
	userIpsRepository: s('userIpsRepository'),
	usedUsernamesRepository: s('usedUsernamesRepository'),
	followingsRepository: s('followingsRepository'),
	followRequestsRepository: s('followRequestsRepository'),
	instancesRepository: s('instancesRepository'),
	emojisRepository: s('emojisRepository'),
	driveFilesRepository: s('driveFilesRepository'),
	driveFoldersRepository: s('driveFoldersRepository'),
	notificationsRepository: s('notificationsRepository'),
	metasRepository: s('metasRepository'),
	mutingsRepository: s('mutingsRepository'),
	blockingsRepository: s('blockingsRepository'),
	swSubscriptionsRepository: s('swSubscriptionsRepository'),
	hashtagsRepository: s('hashtagsRepository'),
	abuseUserReportsRepository: s('abuseUserReportsRepository'),
	registrationTicketsRepository: s('registrationTicketsRepository'),
	authSessionsRepository: s('authSessionsRepository'),
	accessTokensRepository: s('accessTokensRepository'),
	signinsRepository: s('signinsRepository'),
	messagingMessagesRepository: s('messagingMessagesRepository'),
	pagesRepository: s('pagesRepository'),
	pageLikesRepository: s('pageLikesRepository'),
	galleryPostsRepository: s('galleryPostsRepository'),
	galleryLikesRepository: s('galleryLikesRepository'),
	moderationLogsRepository: s('moderationLogsRepository'),
	clipsRepository: s('clipsRepository'),
	clipNotesRepository: s('clipNotesRepository'),
	antennasRepository: s('antennasRepository'),
	antennaNotesRepository: s('antennaNotesRepository'),
	promoNotesRepository: s('promoNotesRepository'),
	promoReadsRepository: s('promoReadsRepository'),
	relaysRepository: s('relaysRepository'),
	mutedNotesRepository: s('mutedNotesRepository'),
	channelsRepository: s('channelsRepository'),
	channelFollowingsRepository: s('channelFollowingsRepository'),
	channelNotePiningsRepository: s('channelNotePiningsRepository'),
	registryItemsRepository: s('registryItemsRepository'),
	webhooksRepository: s('webhooksRepository'),
	adsRepository: s('adsRepository'),
	passwordResetRequestsRepository: s('passwordResetRequestsRepository'),
	retentionAggregationsRepository: s('retentionAggregationsRepository'),
	rolesRepository: s('rolesRepository'),
	roleAssignmentsRepository: s('roleAssignmentsRepository'),
	flashsRepository: s('flashsRepository'),
	flashLikesRepository: s('flashLikesRepository'),
	//#endregion

	// TODO: remove
	Logger: s('Logger'),

	AccountUpdateService: s('AccountUpdateService'),
	AiService: s('AiService'),
	AntennaService: s('AntennaService'),
	AppLockService: s('AppLockService'),
	AchievementService: s('AchievementService'),
	CaptchaService: s('CaptchaService'),
	CreateNotificationService: s('CreateNotificationService'),
	CreateSystemUserService: s('CreateSystemUserService'),
	CustomEmojiService: s('CustomEmojiService'),
	DeleteAccountService: s('DeleteAccountService'),
	DownloadService: s('DownloadService'),
	DriveService: s('DriveService'),
	EmailService: s('EmailService'),
	FederatedInstanceService: s('FederatedInstanceService'),
	FetchInstanceMetadataService: s('FetchInstanceMetadataService'),
	GlobalEventService: s('GlobalEventService'),
	HashtagService: s('HashtagService'),
	HttpRequestService: s('HttpRequestService'),
	IdService: s('IdService'),
	ImageProcessingService: s('ImageProcessingService'),
	InstanceActorService: s('InstanceActorService'),
	InternalStorageService: s('InternalStorageService'),
	MessagingService: s('MessagingService'),
	MetaService: s('MetaService'),
	MfmService: s('MfmService'),
	ModerationLogService: s('ModerationLogService'),
	NoteCreateService: s('NoteCreateService'),
	NoteDeleteService: s('NoteDeleteService'),
	NotePiningService: s('NotePiningService'),
	NoteReadService: s('NoteReadService'),
	NotificationService: s('NotificationService'),
	PollService: s('PollService'),
	PushNotificationService: s('PushNotificationService'),
	QueryService: s('QueryService'),
	ReactionService: s('ReactionService'),
	RelayService: s('RelayService'),
	RoleService: s('RoleService'),
	S3Service: s('S3Service'),
	SignupService: s('SignupService'),
	TwoFactorAuthenticationService: s('TwoFactorAuthenticationService'),
	UserBlockingService: s('UserBlockingService'),
	UserCacheService: s('UserCacheService'),
	UserFollowingService: s('UserFollowingService'),
	UserKeypairStoreService: s('UserKeypairStoreService'),
	UserListService: s('UserListService'),
	UserMutingService: s('UserMutingService'),
	UserSuspendService: s('UserSuspendService'),
	VideoProcessingService: s('VideoProcessingService'),
	WebhookService: s('WebhookService'),
	ProxyAccountService: s('ProxyAccountService'),
	UtilityService: s('UtilityService'),
	FileInfoService: s('FileInfoService'),
	ChartLoggerService: s('ChartLoggerService'),
	FederationChart: s('FederationChart'),
	NotesChart: s('NotesChart'),
	UsersChart: s('UsersChart'),
	ActiveUsersChart: s('ActiveUsersChart'),
	InstanceChart: s('InstanceChart'),
	PerUserNotesChart: s('PerUserNotesChart'),
	PerUserPvChart: s('PerUserPvChart'),
	DriveChart: s('DriveChart'),
	PerUserReactionsChart: s('PerUserReactionsChart'),
	PerUserFollowingChart: s('PerUserFollowingChart'),
	PerUserDriveChart: s('PerUserDriveChart'),
	ApRequestChart: s('ApRequestChart'),
	ChartManagementService: s('ChartManagementService'),
	AbuseUserReportEntityService: s('AbuseUserReportEntityService'),
	AntennaEntityService: s('AntennaEntityService'),
	AppEntityService: s('AppEntityService'),
	AuthSessionEntityService: s('AuthSessionEntityService'),
	BlockingEntityService: s('BlockingEntityService'),
	ChannelEntityService: s('ChannelEntityService'),
	ClipEntityService: s('ClipEntityService'),
	DriveFileEntityService: s('DriveFileEntityService'),
	DriveFolderEntityService: s('DriveFolderEntityService'),
	EmojiEntityService: s('EmojiEntityService'),
	FollowingEntityService: s('FollowingEntityService'),
	FollowRequestEntityService: s('FollowRequestEntityService'),
	GalleryLikeEntityService: s('GalleryLikeEntityService'),
	GalleryPostEntityService: s('GalleryPostEntityService'),
	HashtagEntityService: s('HashtagEntityService'),
	InstanceEntityService: s('InstanceEntityService'),
	MessagingMessageEntityService: s('MessagingMessageEntityService'),
	ModerationLogEntityService: s('ModerationLogEntityService'),
	MutingEntityService: s('MutingEntityService'),
	NoteEntityService: s('NoteEntityService'),
	NoteFavoriteEntityService: s('NoteFavoriteEntityService'),
	NoteReactionEntityService: s('NoteReactionEntityService'),
	NotificationEntityService: s('NotificationEntityService'),
	PageEntityService: s('PageEntityService'),
	PageLikeEntityService: s('PageLikeEntityService'),
	SigninEntityService: s('SigninEntityService'),
	UserEntityService: s('UserEntityService'),
	UserGroupEntityService: s('UserGroupEntityService'),
	UserGroupInvitationEntityService: s('UserGroupInvitationEntityService'),
	UserListEntityService: s('UserListEntityService'),
	FlashEntityService: s('FlashEntityService'),
	FlashLikeEntityService: s('FlashLikeEntityService'),
	RoleEntityService: s('RoleEntityService'),
	ApAudienceService: s('ApAudienceService'),
	ApDbResolverService: s('ApDbResolverService'),
	ApDeliverManagerService: s('ApDeliverManagerService'),
	ApInboxService: s('ApInboxService'),
	ApLoggerService: s('ApLoggerService'),
	ApMfmService: s('ApMfmService'),
	ApRendererService: s('ApRendererService'),
	ApRequestService: s('ApRequestService'),
	ApResolverService: s('ApResolverService'),
	LdSignatureService: s('LdSignatureService'),
	RemoteLoggerService: s('RemoteLoggerService'),
	RemoteUserResolveService: s('RemoteUserResolveService'),
	WebfingerService: s('WebfingerService'),
	ApImageService: s('ApImageService'),
	ApMentionService: s('ApMentionService'),
	ApNoteService: s('ApNoteService'),
	ApPersonService: s('ApPersonService'),
	ApQuestionService: s('ApQuestionService'),
	QueueService: s('QueueService'),
	LoggerService: s('LoggerService'),

	ClientServerService: s('ClientServerService'),
	FeedService: s('FeedService'),
	UrlPreviewService: s('UrlPreviewService'),
	ActivityPubServerService: s('ActivityPubServerService'),
	FileServerService: s('FileServerService'),
	NodeinfoServerService: s('NodeinfoServerService'),
	ServerService: s('ServerService'),
	WellKnownServerService: s('WellKnownServerService'),
	GetterService: s('GetterService'),
	ChannelsService: s('ChannelsService'),
	ApiCallService: s('ApiCallService'),
	ApiLoggerService: s('ApiLoggerService'),
	ApiServerService: s('ApiServerService'),
	AuthenticateService: s('AuthenticateService'),
	RateLimiterService: s('RateLimiterService'),
	SigninApiService: s('SigninApiService'),
	SigninService: s('SigninService'),
	SignupApiService: s('SignupApiService'),
	StreamingApiServerService: s('StreamingApiServerService'),
	MainChannelService: s('MainChannelService'),
	AdminChannelService: s('AdminChannelService'),
	AntennaChannelService: s('AntennaChannelService'),
	ChannelChannelService: s('ChannelChannelService'),
	DriveChannelService: s('DriveChannelService'),
	GlobalTimelineChannelService: s('GlobalTimelineChannelService'),
	HashtagChannelService: s('HashtagChannelService'),
	HomeTimelineChannelService: s('HomeTimelineChannelService'),
	HybridTimelineChannelService: s('HybridTimelineChannelService'),
	LocalTimelineChannelService: s('LocalTimelineChannelService'),
	MessagingIndexChannelService: s('MessagingIndexChannelService'),
	MessagingChannelService: s('MessagingChannelService'),
	QueueStatsChannelService: s('QueueStatsChannelService'),
	ServerStatsChannelService: s('ServerStatsChannelService'),
	UserListChannelService: s('UserListChannelService'),

	QueueLoggerService: s('QueueLoggerService'),
	TickChartsProcessorService: s('TickChartsProcessorService'),
	ResyncChartsProcessorService: s('ResyncChartsProcessorService'),
	CleanChartsProcessorService: s('CleanChartsProcessorService'),
	CheckExpiredMutingsProcessorService: s('CheckExpiredMutingsProcessorService'),
	CleanProcessorService: s('CleanProcessorService'),
	DeleteDriveFilesProcessorService: s('DeleteDriveFilesProcessorService'),
	ExportCustomEmojisProcessorService: s('ExportCustomEmojisProcessorService'),
	ExportNotesProcessorService: s('ExportNotesProcessorService'),
	ExportFavoritesProcessorService: s('ExportFavoritesProcessorService'),
	ExportFollowingProcessorService: s('ExportFollowingProcessorService'),
	ExportMutingProcessorService: s('ExportMutingProcessorService'),
	ExportBlockingProcessorService: s('ExportBlockingProcessorService'),
	ExportUserListsProcessorService: s('ExportUserListsProcessorService'),
	ImportFollowingProcessorService: s('ImportFollowingProcessorService'),
	ImportMutingProcessorService: s('ImportMutingProcessorService'),
	ImportBlockingProcessorService: s('ImportBlockingProcessorService'),
	ImportUserListsProcessorService: s('ImportUserListsProcessorService'),
	ImportCustomEmojisProcessorService: s('ImportCustomEmojisProcessorService'),
	DeleteAccountProcessorService: s('DeleteAccountProcessorService'),
	DeleteFileProcessorService: s('DeleteFileProcessorService'),
	CleanRemoteFilesProcessorService: s('CleanRemoteFilesProcessorService'),
	SystemQueueProcessorsService: s('SystemQueueProcessorsService'),
	ObjectStorageQueueProcessorsService: s('ObjectStorageQueueProcessorsService'),
	DbQueueProcessorsService: s('DbQueueProcessorsService'),
	WebhookDeliverProcessorService: s('WebhookDeliverProcessorService'),
	EndedPollNotificationProcessorService: s('EndedPollNotificationProcessorService'),
	DeliverProcessorService: s('DeliverProcessorService'),
	InboxProcessorService: s('InboxProcessorService'),
	AggregateRetentionProcessorService: s('AggregateRetentionProcessorService'),
	QueueProcessorService: s('QueueProcessorService'),
};
