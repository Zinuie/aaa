#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Misskey configuration
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#   ┌─────┐
#───┘ URL └─────────────────────────────────────────────────────

# Final accessible URL seen by a user.
# You can set url from an environment variable instead.
url: https://example.tld/

# ONCE YOU HAVE STARTED THE INSTANCE, DO NOT CHANGE THE
# URL SETTINGS AFTER THAT!

#   ┌───────────────────────┐
#───┘ Port and TLS settings └───────────────────────────────────

#
# Misskey requires a reverse proxy to support HTTPS connections.
#
#                 +----- https://example.tld/ ------------+
#   +------+      |+-------------+      +----------------+|
#   | User | ---> || Proxy (443) | ---> | Misskey (3000) ||
#   +------+      |+-------------+      +----------------+|
#                 +---------------------------------------+
#
#   You need to set up a reverse proxy. (e.g. nginx)
#   An encrypted connection with HTTPS is highly recommended
#   because tokens may be transferred in GET requests.

# The port that your Misskey server should listen on.
port: 3000

#   ┌──────────────────────────┐
#───┘ PostgreSQL configuration └────────────────────────────────

db:
  host: db
  port: 5432

  # Database name
  # You can set db from an environment variable instead.
  db: misskey

  # Auth
  # You can set user and pass from environment variables instead.
  user: example-misskey-user
  pass: example-misskey-pass

  # Whether disable Caching queries
  #disableCache: true

  # Extra Connection options
  #extra:
  #  ssl: true

dbReplications: false

# You can configure any number of replicas here
#dbSlaves:
#  -
#    host:
#    port:
#    db:
#    user:
#    pass:
#  -
#    host:
#    port:
#    db:
#    user:
#    pass:

#   ┌─────────────────────┐
#───┘ Redis configuration └─────────────────────────────────────

redis:
  host: redis
  port: 6379
  #family: 0  # 0=Both, 4=IPv4, 6=IPv6
  #pass: example-pass
  #prefix: example-prefix
  #db: 1

#redisForPubsub:
#  host: redis
#  port: 6379
#  #family: 0  # 0=Both, 4=IPv4, 6=IPv6
#  #pass: example-pass
#  #prefix: example-prefix
#  #db: 1

#redisForJobQueue:
#  host: redis
#  port: 6379
#  #family: 0  # 0=Both, 4=IPv4, 6=IPv6
#  #pass: example-pass
#  #prefix: example-prefix
#  #db: 1

#redisForTimelines:
#  host: redis
#  port: 6379
#  #family: 0  # 0=Both, 4=IPv4, 6=IPv6
#  #pass: example-pass
#  #prefix: example-prefix
#  #db: 1

#   ┌───────────────────────────┐
#───┘ MeiliSearch configuration └─────────────────────────────

# You can set scope to local (default value) or global
# (include notes from remote).

#meilisearch:
#  host: meilisearch
#  port: 7700
#  apiKey: ''
#  ssl: true
#  index: ''
#  scope: local

#   ┌───────────────┐
#───┘ ID generation └───────────────────────────────────────────

# You can select the ID generation method.
# You don't usually need to change this setting, but you can
# change it according to your preferences.

# Available methods:
# aid ... Short, Millisecond accuracy
# aidx ... Millisecond accuracy
# meid ... Similar to ObjectID, Millisecond accuracy
# ulid ... Millisecond accuracy
# objectid ... This is left for backward compatibility

# ONCE YOU HAVE STARTED THE INSTANCE, DO NOT CHANGE THE
# ID SETTINGS AFTER THAT!

id: 'aidx'

#   ┌────────────────┐
#───┘ Error tracking └──────────────────────────────────────────

# Sentry is available for error tracking.
# See the Sentry documentation for more details on options.

#sentryForBackend:
#  enableNodeProfiling: true
#  options:
#    dsn: 'https://examplePublicKey@o0.ingest.sentry.io/0'

#sentryForFrontend:
#  options:
#    dsn: 'https://examplePublicKey@o0.ingest.sentry.io/0'

#   ┌─────────────────────┐
#───┘ Other configuration └─────────────────────────────────────

# Whether disable HSTS
#disableHsts: true

# Number of worker processes
#clusterLimit: 1

# Job concurrency per worker
# deliverJobConcurrency: 128
# inboxJobConcurrency: 16

# Job rate limiter
# deliverJobPerSec: 128
# inboxJobPerSec: 32

# Job attempts
# deliverJobMaxAttempts: 12
# inboxJobMaxAttempts: 8

caches:
  localUserById:
    memory:
      # Lifetime of cached ID->local user lookups in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of ID->local user lookups cached in memory. Default: 10000
      capacity: 10000

  userById:
    memory:
      # Lifetime of cached ID->user lookups in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of ID->user lookups cached in memory. Default: 15000
      capacity: 15000

  userByToken:
    memory:
      # Lifetime of cached token->user lookups in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of token->user lookups cached in memory. Default: 10000
      capacity: 10000

  userByUri:
    memory:
      # Lifetime of cached URI->user lookups in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of URI->user lookups cached in memory. Default: 10000
      capacity: 10000

  userProfile:
    redis:
      # Lifetime of cached user profiles in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached user profiles in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of user profiles cached in memory. Default: 10000
      capacity: 10000

  userKeyPair:
    redis:
      # Lifetime of cached user keypairs in redis. Default: 86400000 (1 day)
      lifetime: 86400000
    memory:
      # Lifetime of cached user keypairs in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of user keypairs cached in memory. Default: 10000
      capacity: 10000

  roles:
    memory:
      # Lifetime of cached roles in memory. Default: 3600000 (1 hour)
      lifetime: 3600000

  userRoles:
    memory:
      # Lifetime of cached user roles in memory. Default: 3600000 (1 hour)
      lifetime: 3600000
      # Maximum number of user roles cached in memory. Default: 10000
      capacity: 10000

  userMutes:
    redis:
      # Lifetime of cached user mutes in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached user mutes in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of user mutes cached in memory. Default: 1000
      capacity: 1000

  userBlocks:
    redis:
      # Lifetime of cached user blocks in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached user blocks in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of user blocks cached in memory. Default: 1000
      capacity: 1000

  userFollowings:
    redis:
      # Lifetime of cached user followings in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached user followings in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of user followings cached in memory. Default: 1000
      capacity: 1000

  userChannels:
    redis:
      # Lifetime of cached user channel followings in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached user channel followings in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of user channel followings cached in memory. Default: 1000
      capacity: 1000

  publicKeys:
    memory:
      # Lifetime of cached public keys in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of public keys cached in memory. Default: 15000
      capacity: 15000

  emojis:
    memory:
      # Lifetime of cached emojis in memory. Default: 43200000 (12 hours)
      lifetime: 43200000
      # Maximum number of emojis cached in memory. Default: 5000
      capacity: 5000

  localEmojis:
    redis:
      # Lifetime of cached local emojis in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached local emojis in memory. Default: 180000 (3 minutes)
      lifetime: 180000

  instance:
    redis:
      # Lifetime of cached federated instances in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached federated instances in memory. Default: 180000 (3 minute)
      lifetime: 180000
      # Maximum number of federated instances cached in memory. Default: 5000
      capacity: 5000

  swSubscription:
    redis:
      # Lifetime of cached service worker subscriptions in redis. Default: 3600000 (1 hour)
      lifetime: 3600000
    memory:
      # Lifetime of cached service worker subscriptions in memory. Default: 180000 (3 minute)
      lifetime: 180000
      # Maximum number of service worker subscriptions cached in memory. Default: 1000
      capacity: 1000

  listMembership:
    redis:
      # Lifetime of cached list memberships in redis. Default: 1800000 (30 minutes)
      lifetime: 1800000
    memory:
      # Lifetime of cached list memberships in memory. Default: 60000 (1 minute)
      lifetime: 60000
      # Maximum number of list memberships cached in memory. Default: 1000
      capacity: 1000

  clientApp:
    memory:
      # Lifetime of client apps in memory. Default: 604800000 (1 week)
      lifetime: 604800000
      # Maximum number of client apps cached in memory. Default: 1000
      capacity: 1000

  avatarDecorations:
    memory:
      # Lifetime of cached avatar decorations in memory. Default: 1800000 (30 minutes)
      lifetime: 1800000

  relays:
    memory:
      # Lifetime of cached relays in memory. Default: 600000 (10 minutes)
      lifetime: 600000

  suspendedHosts:
    memory:
      # Lifetime of cached suspended hosts in memory. Default: 3600000 (1 hour)
      lifetime: 3600000

  nodeInfo:
    memory:
      # Lifetime of cached node info in memory. Default: 600000 (10 minutes)
      lifetime: 600000

# IP address family used for outgoing request (ipv4, ipv6 or dual)
#outgoingAddressFamily: ipv4

# Proxy for HTTP/HTTPS
#proxy: http://127.0.0.1:3128

proxyBypassHosts:
  - api.deepl.com
  - api-free.deepl.com
  - www.recaptcha.net
  - hcaptcha.com
  - challenges.cloudflare.com

# Proxy for SMTP/SMTPS
#proxySmtp: http://127.0.0.1:3128   # use HTTP/1.1 CONNECT
#proxySmtp: socks4://127.0.0.1:1080 # use SOCKS4
#proxySmtp: socks5://127.0.0.1:1080 # use SOCKS5

# Media Proxy
#mediaProxy: https://example.com/proxy

# Proxy remote files (default: true)
proxyRemoteFiles: true

# Sign to ActivityPub GET request (default: true)
signToActivityPubGet: true

# For security reasons, uploading attachments from the intranet is prohibited,
# but exceptions can be made from the following settings. Default value is "undefined".
# Read changelog to learn more (Improvements of 12.90.0 (2021/09/04)).
#allowedPrivateNetworks: [
#  '127.0.0.1/32'
#]

# Upload or download file size limits (bytes)
#maxFileSize: 262144000
